manifest {
    homePage = 'https://github.com/iarcbioinfo/hla-neo-nf'
    description = 'HLA and Neoantigen prediction'
    mainScript = 'main.nf'
    version  = '1.1'
    name = 'hla-neo'
}

profiles {
  conda { process.conda = "$baseDir/environment.yml" }
  docker {
    docker.enabled = true
  }
  singularity {
    singularity.enabled = true
    singularity.autoMounts = true
  }
}


process {
	errorStrategy = 'retry'
        maxErrors = 100
        maxRetries = 100
    shell =  ['/bin/bash','-o','pipefail']
    // HLA container for HLA-typing
    withName:"xHLA" {
      container = "humanlongevity/hla:0.0.0"
    }
    //PVAC container for Neoantigen prediction
    withName:"pVactools"{
    container = "griffithlab/pvactools:4.1.1"
    }
    withName:"VEP"{
    container = "iarcbioinfo/ensembl-vep:latest"
    }
    withName:"expr_annot"{
    container = "iarcbioinfo/ensembl-vep:latest"
    }
}



// Load job.conf for process tagging
//includeConfig 'conf/jobs.conf'




params {

output_folder="./results"
//we init some parameters
ref = null
ref_dict = null
tn_file = null
help = false
debug = false
vcf_dir = null
cram_dir = null
vep_dir = null
bam = false
pvactools_predictors = "all_class_i,all_class_ii"
// resource defaults
max_memory = 128.GB
max_cpus = 8
max_time = 240.h

cpu          = 2
mem          = 8

}

timeline {
  enabled = true
  file = "${params.output_folder}/nf-pipeline_info/hla-neo_timeline.html"
}

report {
  enabled = true
  file = "${params.output_folder}/nf-pipeline_info/hla-neo_report.html"
}

trace {
  enabled = true
  file = "${params.output_folder}/nf-pipeline_info/hla-neo_trace.txt"
}

dag {
  enabled = true
  file = "${params.output_folder}/nf-pipeline_info/hla-neo_dag.html"

}



//Mesage regarding errors or complete
workflow.onComplete = {
    // any workflow property can be used here
    println "Pipeline complete"
    println "Command line: $workflow.commandLine"
}


workflow.onError = {
   println "Oops... Pipeline execution stopped with the following message: ${workflow.errorMessage}"
}
